{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Switch, Box, FormControlLabel } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { BsMoon } from \"react-icons/bs\";\nimport useToggle from '../hooks/useToggle';\nimport '../styles/globals.css';\nexport default function MyApp(props) {\n  var Component = props.Component,\n      pageProps = props.pageProps;\n\n  var _useToggle = useToggle(),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      darkMode = _useToggle2[0],\n      setDarkMode = _useToggle2[1];\n\n  useEffect(function () {\n    // Remove the server-side injected CSS.\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  var theme = createMuiTheme({\n    palette: {\n      type: darkMode ? 'dark' : 'light'\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n  })), __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    mt: 3,\n    p: 1\n  }, __jsx(Box, null, __jsx(FormControlLabel, {\n    value: \"end\",\n    control: __jsx(Switch, {\n      checked: darkMode,\n      onChange: setDarkMode\n    }),\n    label: __jsx(BsMoon, {\n      size: \"1rem\"\n    }),\n    labelPlacement: \"end\"\n  }))), __jsx(CssBaseline, null), __jsx(Component, pageProps)));\n}","map":null,"metadata":{},"sourceType":"module"}
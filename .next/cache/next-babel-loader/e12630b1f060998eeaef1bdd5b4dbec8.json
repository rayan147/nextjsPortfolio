{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rayanramirez/google_drive/code/github/rayan147/nextjsPortfolio/components/Projects/Projects.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Box } from '@material-ui/core';\nimport ProjectCard from './ProjectCard';\nimport Title from '../Title/Title';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      marginTop: '1rem',\n      marginBottom: '10rem'\n    },\n    paper: {\n      height: 300,\n      width: 340,\n      margin: 'auto'\n    },\n    control: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      marginTop: '3rem',\n      marginBottom: \"3rem\"\n    }\n  };\n});\nvar cryptoboard = {\n  name: \"Cryptoboard\",\n  desc: 'Display the top 20 cryptocurrcies by market cap ',\n  techs: [\"Cloudfront\", \"S3\", \"Route53\", 'Nextjs', 'Serverless Framework'],\n  github: 'https://github.com/rayan147/cryptoboard',\n  demo: 'https://cryptoboard.rayanr.com/',\n  img: \"https://myprojectspictures147.s3.amazonaws.com/cryptoboard.png\"\n};\nvar tasktracker = {\n  name: \"Task Tracker\",\n  desc: \"his is task tracker to help me organize my tickets and deployment at work feel free to clone and use it. you could drag and drop lists/cards\",\n  techs: [\"Reactjs\", \"React Router\", \"S3\", \"Amplify\", \"Redux\", \"Materail-iu\", \"React-icon\"],\n  github: \"https://github.com/rayan147/tasktracker-\",\n  demo: \"https://task.rayanr.com/\",\n  img: \"https://myprojectspictures147.s3.amazonaws.com/tasktracker.png\"\n};\n\nvar Project = function Project() {\n  _s();\n\n  var classes = useStyles();\n  return __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.root,\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, __jsx(Title, {\n    title: \"Projects\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  })), __jsx(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, __jsx(ProjectCard, _extends({}, cryptoboard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  })))), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, __jsx(ProjectCard, _extends({}, tasktracker, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }))))));\n};\n\n_s(Project, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Project;\nexport default _c2 = /*#__PURE__*/React.memo(Project);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Project\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/rayanramirez/google_drive/code/github/rayan147/nextjsPortfolio/components/Projects/Projects.js"],"names":["React","makeStyles","Grid","Paper","Box","ProjectCard","Title","useStyles","theme","root","flexGrow","marginTop","marginBottom","paper","height","width","margin","control","padding","spacing","textAlign","cryptoboard","name","desc","techs","github","demo","img","tasktracker","Project","classes","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Grid,Paper,Box} from '@material-ui/core';\nimport ProjectCard from './ProjectCard'\nimport Title from '../Title/Title';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop:'1rem',\n    marginBottom:'10rem'\n  },\n  paper: {\n    height: 300,\n    width: 340,\n    margin: 'auto'\n  },\n  control: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    marginTop:'3rem',\n    marginBottom:\"3rem\"\n  \n  },\n}));\nconst cryptoboard={\n   name:\"Cryptoboard\",\n   desc:'Display the top 20 cryptocurrcies by market cap ',\n   techs:[\"Cloudfront\",\"S3\",\"Route53\",'Nextjs','Serverless Framework'],\n   github:'https://github.com/rayan147/cryptoboard',\n   demo:'https://cryptoboard.rayanr.com/',\n   img:\"https://myprojectspictures147.s3.amazonaws.com/cryptoboard.png\"\n}\nconst tasktracker ={\n  name:\"Task Tracker\",\n  desc:\"his is task tracker to help me organize my tickets and deployment at work feel free to clone and use it. you could drag and drop lists/cards\",\n  techs:[\"Reactjs\",\"React Router\",\"S3\",\"Amplify\",\"Redux\",\"Materail-iu\",\"React-icon\"],\n  github:\"https://github.com/rayan147/tasktracker-\",\n  demo:\"https://task.rayanr.com/\",\n  img:\"https://myprojectspictures147.s3.amazonaws.com/tasktracker.png\"\n}\nconst  Project = () =>{\n  const classes = useStyles();\n\n  \n  return (\n    <Grid \n    container \n    direction=\"row\"\n    justify=\"center\"\n    alignItems=\"center\"\n    className={classes.root} \n    spacing={2}>\n       <Grid>\n         <Title title=\"Projects\"/>\n\n      </Grid>\n         \n        <Grid container justify=\"center\" spacing={5}>\n         \n            <Grid item>\n              <Paper className={classes.paper} >\n              <ProjectCard  {...cryptoboard}/>\n              </Paper>\n            </Grid>\n            <Grid item>\n              <Paper className={classes.paper} >\n              <ProjectCard  {...tasktracker}/>\n              </Paper>\n            </Grid>\n           \n        </Grid>\n    </Grid>\n    \n  );\n}\nexport default React.memo(Project)"]},"metadata":{},"sourceType":"module"}
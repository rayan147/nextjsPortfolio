{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/rayanramirez/Documents/nextjs_portfolio/components/ToggleTheme.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Switch } from '@material-ui/core';\n\nvar ToggleTheme = function ToggleTheme() {\n  _s();\n\n  var _useState = useState(false),\n      darkMode = _useState[0],\n      setDarkMode = _useState[1];\n\n  var toggleChecked = function toggleChecked() {\n    setDarkMode(function (prev) {\n      return !prev;\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, __jsx(Switch, {\n    checked: checked,\n    onChange: toggleChecked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(ToggleTheme, \"D2+2tCNohYwQ9K/tGnxPgGRQSlM=\");\n\n_c = ToggleTheme;\nexport default ToggleTheme;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleTheme\");","map":{"version":3,"sources":["/Users/rayanramirez/Documents/nextjs_portfolio/components/ToggleTheme.js"],"names":["React","useState","Switch","ToggleTheme","darkMode","setDarkMode","toggleChecked","prev","checked"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA4B,OAA5B;AACA,SAAQC,MAAR,QAAqB,mBAArB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,kBAESF,QAAQ,CAAC,KAAD,CAFjB;AAAA,MAEfG,QAFe;AAAA,MAELC,WAFK;;AAGtB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBD,IAAAA,WAAW,CAAC,UAACE,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAAX;AACD,GAFH;;AAGA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,OAAjB;AAA0B,IAAA,QAAQ,EAAEF,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAXD;;GAAMH,W;;KAAAA,W;AAaN,eAAeA,WAAf","sourcesContent":["import React,{useState}from 'react'\nimport {Switch} from '@material-ui/core';\nconst ToggleTheme = () => {\n    \n    const [darkMode, setDarkMode] =useState(false)\n    const toggleChecked = () => {\n        setDarkMode((prev) => !prev);\n      };\n    return (\n        <div>\n            <Switch checked={checked} onChange={toggleChecked} />\n        </div>\n    )\n}\n\nexport default ToggleTheme "]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/rayanramirez/Documents/nextjs_portfolio/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Switch, Box, FormControlLabel } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { BsMoon } from \"react-icons/bs\";\nimport { useToggle } from '../hooks/useToggle';\nexport default function MyApp(props) {\n  const {\n    Component,\n    pageProps\n  } = props;\n  const [darkMode, setDarkMode] = useToggle();\n\n  const toggleChecked = () => {\n    setDarkMode(prev => !prev);\n  };\n\n  useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  const theme = createMuiTheme({\n    palette: {\n      type: darkMode ? 'dark' : 'light'\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), __jsx(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Box, {\n    display: \"flex\",\n    mt: 3,\n    p: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(FormControlLabel, {\n    value: \"end\",\n    control: __jsx(Switch, {\n      checked: darkMode,\n      onChange: toggleChecked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    }),\n    label: __jsx(BsMoon, {\n      size: \"1rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }\n    }),\n    labelPlacement: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  })), __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }))));\n}\nMyApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/rayanramirez/Documents/nextjs_portfolio/pages/_app.js"],"names":["React","useEffect","useState","PropTypes","Head","ThemeProvider","Switch","Box","FormControlLabel","CssBaseline","createMuiTheme","BsMoon","useToggle","MyApp","props","Component","pageProps","darkMode","setDarkMode","toggleChecked","prev","jssStyles","document","querySelector","parentElement","removeChild","theme","palette","type","propTypes","elementType","isRequired","object"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAsC,OAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAqBC,gBAArB,QAA6C,mBAA7C;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,SAAT,QAAyB,oBAAzB;AACA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BF,KAAjC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAAyBN,SAAS,EAAxC;;AACE,QAAMO,aAAa,GAAG,MAAM;AACxBD,IAAAA,WAAW,CAAEE,IAAD,IAAU,CAACA,IAAZ,CAAX;AACD,GAFH;;AAGFnB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMoB,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACG,aAAV,CAAwBC,WAAxB,CAAoCJ,SAApC;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAOA,QAAMK,KAAK,GAAGhB,cAAc,CAAC;AAC3BiB,IAAAA,OAAO,EAAE;AACRC,MAAAA,IAAI,EAAEX,QAAQ,GAAG,MAAH,GAAW;AADjB;AADkB,GAAD,CAA5B;AAKA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,sDAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAES,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,EAAE,EAAE,CAAxB;AAA2B,IAAA,CAAC,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEJ,MAAC,gBAAD;AACM,IAAA,KAAK,EAAC,KADZ;AAEF,IAAA,OAAO,EAAE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAET,QAAjB;AAA2B,MAAA,QAAQ,EAAEE,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFP;AAGM,IAAA,KAAK,EAAE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHb;AAIM,IAAA,cAAc,EAAC,KAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFI,CADF,EAYE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,MAAC,SAAD,eAAeH,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbF,CALF,CADF;AAwBD;AAEDH,KAAK,CAACgB,SAAN,GAAkB;AAChBd,EAAAA,SAAS,EAAEZ,SAAS,CAAC2B,WAAV,CAAsBC,UADjB;AAEhBf,EAAAA,SAAS,EAAEb,SAAS,CAAC6B,MAAV,CAAiBD;AAFZ,CAAlB","sourcesContent":["import React,{useEffect,useState}from 'react';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Switch, Box,FormControlLabel } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { BsMoon } from \"react-icons/bs\";\nimport { useToggle} from '../hooks/useToggle'\nexport default function MyApp(props) {\n  const { Component, pageProps } = props;\n  const [darkMode, setDarkMode] =useToggle()\n    const toggleChecked = () => {\n        setDarkMode((prev) => !prev);\n      };\n  useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  const theme = createMuiTheme({\n    palette: {\n     type: darkMode ? 'dark' :'light'\n    },\n  });\n  return (\n    <>\n      <Head>\n        <title>My page</title>\n        <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\n      </Head>\n      <ThemeProvider theme={theme}>\n        <Box display=\"flex\" mt={3} p={1}> \n    \n    <FormControlLabel\n          value=\"end\"\n  control={<Switch checked={darkMode} onChange={toggleChecked} /> }\n          label={<BsMoon size=\"1rem\"/>}\n          labelPlacement=\"end\"\n        />\n    \n    </Box>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...pageProps} />\n      \n      </ThemeProvider>\n    </>\n  );\n}\n\nMyApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired,\n};"]},"metadata":{},"sourceType":"module"}